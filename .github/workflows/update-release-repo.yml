name: Update Release Repo on New Release

on:
  repository_dispatch:
    types: [new-release]
  workflow_dispatch:
    inputs:
      repository_name:
        description: 'Repository name that released'
        required: true
      release_tag:
        description: 'Release tag'
        required: true

jobs:
  update-submodule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout release-repo
        uses: actions/checkout@v4
        with:
          repository: Keyla-TTT/Keyla-RELEASE
          token: ${{ secrets.PAT_TOKEN }}
          submodules: true

      - name: Update submodule to new release tag
        run: |
          REPO_NAME="${{ github.event.client_payload.repository_name || github.event.inputs.repository_name }}"
          TAG_NAME="${{ github.event.client_payload.release_tag || github.event.inputs.release_tag }}"
          
          echo "Updating repository: $REPO_NAME to version: $TAG_NAME"
          
          # Verify existing directories
          echo "Directory disponibili:"
          ls -la
          
          # Create assets directory
          mkdir -p ./release-assets
          
          # Update the specified submodule
          if [ "$REPO_NAME" = "Keyla-API" ] && [ -d "Keyla-API" ]; then
            cd "Keyla-API"
            git fetch --tags
            git checkout "$TAG_NAME"
            cd ..
          elif [ "$REPO_NAME" = "Keyla-CLI" ] && [ -d "Keyla-CLI" ]; then
            cd "Keyla-CLI"
            git fetch --tags
            git checkout "$TAG_NAME"
            cd ..
          elif [ "$REPO_NAME" = "Keyla-REPORT" ] && [ -d "Keyla-REPORT" ]; then
            cd "Keyla-REPORT"
            git fetch --tags
            git checkout "$TAG_NAME"
            cd ..
          else
            echo "Error: Directory $REPO_NAME not found"
            exit 1
          fi

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update $REPO_NAME to $TAG_NAME"
            git push
          fi

      - name: Collect assets from all submodules
        run: |
          # Create directory for the assets
          mkdir -p ./release-assets
          
          # Raccoglie asset da Keyla-API
          if [ -d "Keyla-API" ]; then
            cd Keyla-API
            echo "Collecting assets from Keyla-API"
            if [ -d "build/libs" ]; then
              cp build/libs/*.jar ../release-assets/ || true
            elif [ -d "target" ]; then
              cp target/*.jar ../release-assets/ || true
            fi
            cd ..
          fi
          
          # Raccoglie asset da Keyla-CLI
          if [ -d "Keyla-CLI" ]; then
            cd Keyla-CLI
            echo "Collecting assets from Keyla-CLI"
            if [ -d "target/scala-2.13" ]; then
              cp target/scala-2.13/*.jar ../release-assets/ || true
            elif [ -d "target" ]; then
              cp target/*.jar ../release-assets/ || true
            fi
            cd ..
          fi
          
          # Raccoglie asset da Keyla-REPORT
          if [ -d "Keyla-REPORT" ]; then
            cd Keyla-REPORT
            echo "Collecting assets from Keyla-REPORT"
            if [ -d "dist" ]; then
              cp -r dist/* ../release-assets/ || true
            elif [ -d "build" ]; then
              cp -r build/* ../release-assets/ || true
            fi
            cd ..
          fi
          
          echo "Assets collected:"
          ls -la ./release-assets

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ github.run_number }}
          name: Release ${{ github.run_number }}
          body: |
            Completed Release including:
            - API: $(cd Keyla-API && git describe --tags)
            - CLI: $(cd Keyla-CLI && git describe --tags)
            - REPORT: $(cd Keyla-REPORT && git describe --tags)
            
            Updated with this release:
            - ${{ github.event.client_payload.repository_name || github.event.inputs.repository_name }}: ${{ github.event.client_payload.release_tag || github.event.inputs.release_tag }}
          token: ${{ secrets.PAT_TOKEN }}
          files: |
            ./release-assets/*