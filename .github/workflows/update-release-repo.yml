name: Update Release Repo on New Release

on:
  repository_dispatch:
    types: [new-release]
  workflow_dispatch:
    inputs:
      repository_name:
        description: 'Repository name that released'
        required: true
      release_tag:
        description: 'Release tag'
        required: true

jobs:
  update-submodule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout release-repo
        uses: actions/checkout@v4
        with:
          repository: Keyla-TTT/Keyla-RELEASE
          token: ${{ secrets.PAT_TOKEN }}
          submodules: true

      - name: Update submodule to new release tag
        run: |
          REPO_NAME="${{ github.event.client_payload.repository_name || github.event.inputs.repository_name }}"
          TAG_NAME="${{ github.event.client_payload.release_tag || github.event.inputs.release_tag }}"

          echo "Updating repository: $REPO_NAME to version: $TAG_NAME"

          # Verify existing directories
          echo "Possible Directories:"
          ls -la

          # Update the correct submodule 
          if [ "$REPO_NAME" = "Keyla-API" ]; then
            SUBMODULE_DIR=$(find . -name "*api*" -type d | head -1)
          elif [ "$REPO_NAME" = "Keyla-CLI" ]; then
            SUBMODULE_DIR=$(find . -name "*cli*" -type d | head -1)
          elif [ "$REPO_NAME" = "Keyla-REPORT" ]; then
            SUBMODULE_DIR=$(find . -name "*report*" -type d | head -1)
          fi

          if [ -n "$SUBMODULE_DIR" ]; then
            echo "Update Submodule in: $SUBMODULE_DIR"
            cd "$SUBMODULE_DIR"
            git fetch --tags
            git checkout "$TAG_NAME"
            cd ..
          else
            echo "Errore: Directory $REPO_NAME not found"
            exit 1
          fi

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Update $REPO_NAME a $TAG_NAME"
          git push
